const { sha3 } = require('ethereumjs-util')
const Promise = require('bluebird')
const GitTokenKeystoreGenerator = require('../dist/index').default


const wallet = new GitTokenKeystoreGenerator({
  web3Provider: 'http://138.68.225.133:8545',
  dirPath: `${process.cwd()}`
  // recoveryShare: '5e83813bcb68db92f35dd9f92f933ac02f909134fe3023e192a1314ad091fdc9',
  // address: '2aafef6e4fe04f801c90294747c98fbf75076843'
})


Promise.delay(1000, wallet.sendTransaction({
  to: '0x293723c04563e55e5bf652f0e22ab091255afa9a',
  value: 1
})).then((txReceipt) => {
  console.log('txReceipt', txReceipt)
  // txReceipt { blockHash: '0x1684eee43a3ea6ca54fa7c5e573e286f2d1f182e852b06be36887913b7a6e324',
  // blockNumber: 9,
  // contractAddress: null,
  // cumulativeGasUsed: 21000,
  // gasUsed: 21000,
  // logs: [],
  // logsBloom: '0x
  // root: null,
  // status: null,
  // transactionHash: '0x984c49a69d640f5db55d3095f3e3657ce4c31ba75bee687913527adf745e78ca',
  // transactionIndex: 0 }
}).catch((error) => {
  console.log('error', error)
})
